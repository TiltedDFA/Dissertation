
import itertools
import subprocess
import csv
import sys
import pathlib
import math

PARAM_RANGES = \
[
    [100.0,],      # INITIAL_TEMPERATURE
    [0.95,],       # TEMPERATURE_COOLING_RATE
    [3,],             # BOLTZMANN_TOURNAMENT_SIZE
    [0.6,],             # MUTATION_CHANCE
    [1,],             # ELITE_COUNT
    [20,50,100,300],             # POPULATION_SIZE
    [2,],             # RANDOM_IMMIGRATION_COUNT
    [200,]             # NUMBER_OF_RUNS
]


INCLUDE_FILE = "src/Current/compile_time_values.inc"

NINJA_CMD = ["ninja"]

EXECUTABLE = "./Real"

LOG_FILE = "results.csv"

OUTPUT_DIR = pathlib.Path("sim_outputs")

def write_include_file(values, path):
    with open(path, "w") as f:
        f.write("// Auto-generated by automate.py\n")
        for idx, v in enumerate(values, start=1):
            f.write(f"constexpr static auto SCRIPT_GENERATED_VALUE_{idx} = {v};\n")

def build_project():
    print("Building with:", " ".join(NINJA_CMD))
    subprocess.run(NINJA_CMD, check=True, cwd="./build")

def run_simulator():
    print("Running simulator:", EXECUTABLE)
    result = subprocess.run([EXECUTABLE],
                            capture_output=True, text=True, check=True, cwd="./build")
    return result.stdout

def main():
    OUTPUT_DIR.mkdir(exist_ok=True)
    experiment_count = 0
    total = math.prod(len(r) for r in PARAM_RANGES)
    header = [f"x{i+1}" for i in range(len(PARAM_RANGES))] + ["output_file"]

    with open(LOG_FILE, "w", newline="") as csvfile:
        writer = csv.writer(csvfile)
        writer.writerow(header)

        for idx, combo in enumerate(itertools.product(*PARAM_RANGES), start=1):
            print(f"Iteration {idx} out of {total}")
            print(f"Testing combo: {combo}")

        # print(f"\n==> Testing combo: {combo}\tNo.{experiment_count}/{len(itertools.product(*PARAM_RANGES))}")

            write_include_file(combo, INCLUDE_FILE)

            try:
                build_project()
            except subprocess.CalledProcessError as e:
                err_tag = "BUILD_FAILED"
                print(f"  BUILD FAILED for {combo}", file=sys.stderr)
                writer.writerow(list(combo) + [err_tag])
                continue
            stdout = ""
            try:
                for i in range(0, 10):
                    stdout += run_simulator()
            except subprocess.CalledProcessError as e:
                err_tag = "RUN_FAILED"
                print(f"  RUN FAILED for {combo}", file=sys.stderr)
                writer.writerow(list(combo) + [err_tag])
                continue

            fname = OUTPUT_DIR / f"out_{experiment_count}.txt"
            experiment_count += 1
            with open(fname, "w") as outf:
                outf.write(stdout)

            writer.writerow(list(combo) + [str(fname)])
            print(f"  â†’ output saved to {fname}\n")

    print(f"\nAll done. Results in {LOG_FILE} and files under {OUTPUT_DIR}/")

if __name__ == "__main__":
    main()
